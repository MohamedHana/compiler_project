#transition table 1
@def if i,f
@start_state 0
@final_state 2
@states 0 1 2 3
@tt 1 3 3 2 3 3 3 3 
#transition table 2
@def then t h e n
@start_state 0
@final_state 4
@states 0 1 2 3 4 5
@tt 1 5 5 5 5 2 5 5 5 5 3 5 5 5 5 4 5 5 5 5 5 5 5 5
#transition table 3
@def else e l s
@start_state 0
@final_state 4
@states 0 1 2 3 4 5
@tt 1 5 5 5 2 5 5 5 3 4 5 5 5 5 5 5 5 5
#transition table 4
@def end e n d
@start_state 0
@final_state 3
@states 0 1 2 3 4 
@tt 1 4 4 4 2 4 4 4 3 4 4 4 4 4 4
#transition table 5
@def repeat r e p a t
@start_state 0
@final_state 6
@states 0 1 2 3 4 5 6 7 
@tt 1 7 7 7 7 7 2 7 7 7 7 7 3 7 7 7 4 7 7 7 7 7 7 5 7 7 7 7 7 6 
7 7 7 7 7 7 7 7 7 7
#transition table 6
@def until
@start_state 0
@final_state 5
@states 0 1 2 3 4 5 6
@tt 1 6 6 6 6 6 2 6 6 6 6 6 3 6 6 6 6 6 4 6 6 6 6 6 5 6 6 6 6 6 6 6 6 6 6
#transition table 7
@def read r e a d
@start_state 0
@final_state 4
@states 0 1 2 3 4 5
@tt 1 5 5 5 5 2 5 5 5 5 3 5 5 5 5 4 5 5 5 5 5 5 5 5
#transition table 8
@def write w r i t e
@start_state 0
@final_state 5
@states 0 1 2 3 4 5 6
@tt 1 6 6 6 6 6 2 6 6 6 6 6 3 6 6 6 6 6 4 6 6 6 6 6 5 
6 6 6 6 6 6 6 6 6 6
#transition table 9
@def operators := + - * / = >
@start_state 0
@final_state 1 2 3 4 5 6 7
@states 0 1 2 3 4 5 6 7 8 
@tt 1 2 3 4 5 6 7 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
 8 8 8 8 8 8 
#transition table 10
@def symbols ( ; )
@start_state 0
@final_state 1 2 3 
@states 0 1 2 3 4 
@tt 1 2 3 4 4 4 4 4 4 4 4 4 4 4 4
#transition table 11
@def number 0 1 2 3 4 5 6 7 8 9
@start_state 0
@final_state 1  
@states 0 1 
@tt 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
#transition table 12
@def identifires A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
@start_state 0
@final_state 1 
@states 0 1 
@tt 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 


